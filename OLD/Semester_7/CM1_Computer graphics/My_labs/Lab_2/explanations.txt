Есть два вида поворотов:
 в глобальной системе координат
 в локальной
 
 Локальная имее смысл часто в случае, когда один объект находится в другом
 Например башня танка. Она связана с танком и если мы хотим повернуть ее на 30 градусов относительго
 текущей ориентации танка
Очень редко когда нужно повернуть башню в глобальной системе координат, но чаще мы управляем именно 
относительно текущего ее положения - это и есть ориентация в локальной системе.
Либо ты перевернулся на спину, у тебя мир типа тоже вверх ногами и можно крутить  какой-то предмет
относительно твоего текущего положения - это локальное вращение, а можно глобально.

Еще пример локального вращения - стрелки на твоих часах. Они ведь крутятся независимо как повернуто
блюдце, они всегда крутятся в плоскости блюдца. Они зависимы от ориентации блюдца!

это называется лямбда функции
обычно если они маленькие - это хорошо, тогда компактно в одном месте все видно
а если уже более чем несколько строк - лучше создавать отдельную
стрелки конечно же не очень зависимы между собой, их связывает то, что они находятся в одной плоскости
и независимо от того, как ориентируется блюдце часов, все стрелки находятся в плоскости этого блюдца
ну мы разбивает задачу на 2
решаем ее для одной стороны, потом для второй
это не важно
главное, что каждая сторона имеет свою плоскость, в локальной системе которой и происходит поворот стрелок
движение стрелок - это тоже поворот
есть еще вращение при помощи углов Эйлера и кватернионов

кватернионы понять сложнее всего, но они могут быть простыми в использовании, если библиотека, которую ты используешь их поддерживает
матрицы в этом плане сложнее
просто саму матрицу нужно знать как приготовить
юнити умеет все 3 способа